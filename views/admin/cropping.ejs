<div>
    <div class="row mb-3">
      <div class="col-md-6 pr-1">
          <label for="image">Image:</label>
          <input type="file" id="image" name="image" multiple  onchange="previewAndCropImages(event)">
       </div>
    </div>
    <div class="row">
      <div class="col-md-6 pr-1">
         <div id="imagePreview" class="preview-container"></div>
      </div>
    </div>
    <div class="form-group">
      <label for="cropWidth">Width:</label>
      <input type="number" id="cropWidth" value="200">
      <label for="cropHeight">Height:</label>
      <input type="number" id="cropHeight" value="200">
  </div>
  <div class="row">
    <div class="col-md-5 pr-1 form-group">
            <button class="btn btn-fill-out btn-block hover-up" onclick="cropAndSaveImages()">Crop & Save Images</button>
    </div>
</div>
</div>
<!-- <div class="container m-5">
        <div class="row">
          <div class="col-lg-10 m-auto">
            <form action="/allProducts" method="GET">
              <div class="col-lg-5 ">
                <label for="sortBy"></label>
                <span>Sort by price</span>
                <select id="sortBy" name="sortby" class="form-control sort">
                  <option value="lowerPrice">Low To High</option>
                  <option value="higherPrice">High To Low</option>
                </select>

              </div>
              <div class="col-md-1">
                <button type="submit" class="btn btn-primary mt-2 btn-block">Sort</button>
              </div>
          </div>
          <div class="row">
            <div class="col-lg-5 ">
              <form action="/allProducts" method="GET">
                <label for="searchQuery"></label>
                <input type="text" class="form-control" id="searchQuery" name="searchQuery" placeholder="Search ">
            </div>
            <div class="col-lg-1 m-4">
              <button type="submit" class="btn btn-primary" style="border-radius: 10px;"><i
                  class="fa fa-search"></i>Search</button>
            </div>

          </div>
          </form>


        </div>
      </div>



      <div class="container-home m-5">
        <% products.forEach(product=> { %>
          <div class="product-wrapper p-2">
            <div class="product">
              <p class="card-text">
                <%= product.category.name %>
                  <div class="img">

                    <img src="<%= product.images[0].url %>" alt="Product Image" class="img-fluid mx-auto d-block"
                      alt="Product Image" style="width:100%">

                  </div>
                  <div class="info">
                    <div class="details">
                      <h1>
                        <%= product.productName %>
                      </h1>

                      <select name="selectedProduct">
                        <% product.weightOptions.forEach(option=> { %>
                          <option
                            value="<%= option.weight %><%= option.weightPrice.toFixed(2) %>,<%= option.priceAfterDiscount %>">
                            <%= option.weight %>g
                              <% if (product.offerPercentage !==0) { %>
                                <strong>
                                  <p>on offer</p>
                                </strong>
                                ₹<%= option.priceAfterDiscount.toFixed(2) %>
                                  <del>₹<%= option.weightPrice.toFixed(2) %></del>
                                  <% } else { %>
                                    ₹<%= option.weightPrice.toFixed(2) %>
                                      <% } %>
                          </option>
                          <% }) %>
                      </select>

                    </div>
                    <div class="buy-btn">
                      <form action="/viewProduct" method="GET">
                        <input type="hidden" value="<%=product._id %>" name="productId">
                        <button>Details</button>
                      </form>

                    </div>

                  </div>

                  <a href="/addToCart">Add to cart</a>
            </div>

          </div>
          <% }); %>
      </div>
      <h3>pagination</h3>
      <div class=" pagination">
        <% if (currentPage> 1) { %>
          <a href="/allProducts?page=<%= currentPage - 1 %>&searchQuery=<%= searchQuery %>"> Previous</a>
          <% } %>
            <% if (products.length===perPage) { %>
              <a href="/allProducts?page=<%= currentPage + 1 %>&searchQuery=<%= searchQuery %>">Next</a>
              <% } %>
      </div>
      <h3>pagination</h3>
      </div> -->

      <!-- Pagination -->









<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
  const containers = [];

  async function previewAndCropImages(event) {
      const preview = document.getElementById('imagePreview');
      preview.innerHTML = ''; // Clear previous previews

      const files = event.target.files; // Get selected files

    //   for (let i = 0; i < files.length; i++) {
    //     console.log('Uploaded images:', files[i].name);
    // }

      for (let i = 0; i < files.length; i++) {
          const file = files[i];
          const reader = new FileReader();

          reader.onload = function(e) {
              const img = document.createElement('img');
              img.src = e.target.result;
              img.classList.add('preview-image');
              preview.appendChild(img);

              // Initialize Cropper
              const cropper = new Cropper(img, {
                  aspectRatio: NaN, // Allow free aspect ratio
                  viewMode: 1, // Set view mode
                  crop(event) {
                      const cropperData = cropper.getData();
                      document.getElementById('cropWidth').value = Math.round(cropperData.width);
                      document.getElementById('cropHeight').value = Math.round(cropperData.height);
                  }
                  // Add more options as needed
              });

              // Store Cropper instance with the image element
              img.cropper = cropper;
          };

          reader.readAsDataURL(file);
      }
  }

  function cropAndSaveImages() {
      const previewImages = document.querySelectorAll('.preview-image');

      previewImages.forEach(img => {
          // Get cropped data
          const cropper = img.cropper;
          if (cropper) {
              const cropWidth = document.getElementById('cropWidth').value;
              const cropHeight = document.getElementById('cropHeight').value;
              const croppedDataUrl = cropper.getCroppedCanvas({
                  width: parseInt(cropWidth),
                  height: parseInt(cropHeight)
              }).toDataURL();

              // Create a new container for the cropped image
              const container = document.createElement('div');
              container.classList.add('preview-container');

              // Display the cropped image
              const croppedImg = document.createElement('img');
              croppedImg.src = croppedDataUrl;
              croppedImg.classList.add('cropped-image');
              container.appendChild(croppedImg);

              // Display the width and height
              const widthLabel = document.createElement('span');
              widthLabel.textContent = 'Width: ' + cropWidth;
              container.appendChild(widthLabel);

              const heightLabel = document.createElement('span');
              heightLabel.textContent = 'Height: ' + cropHeight;
              container.appendChild(heightLabel);

              // Append the container to the list
              containers.push(container);
              // console.log('Checking cropped image:', croppedDataUrl);
          }
      });

      // Display the cropped images in separate containers
      const imagesContainer = document.getElementById('imagePreview');
      imagesContainer.innerHTML = ''; // Clear previous previews
      containers.forEach(container => {
          imagesContainer.appendChild(container);
      });

      // Save the cropped images
      containers.forEach(container => {
          const croppedImg = container.querySelector('.cropped-image');
          const dataUrl = croppedImg.src;
          console.log('Saved image:', dataUrl);
         
      });
  }

  
</script>