<header>
    <div class="header-bottom sticky-bar sticky-white-bg">
        <div class="container">

            <div class="header-action-right">
                <!-- <div class="search-style-2">
                <form action="#">
                    <select class="select-active">
                        <option>Search in</option>
                        <option>Fruits</option>
                        <option>Vegetables</option>
                        <option>Sprouts</option>
                        <option>Consumer Electronics</option>
                        <option>Jewelry & Accessories</option>
                        <option>Home & Garden</option>
                        <option>Luggage & Bags</option>
                        <option>Shoes</option>
                        <option>Mother & Kids</option>
                    </select>
                    <input type="text" placeholder="Search for itemsâ€¦">
                </form>
            </div> -->
                <div class="header-action-2">
                    <div class="header-action-icon-2">
                        <a href="shop-wishlist.html">
                            <img class="svgInject" alt="Evara" src="/assets/imgs/theme/icons/icon-heart.svg">
                            <span class="pro-count blue"></span>
                        </a>
                    </div>
                    <div class="header-action-icon-2">
                        <a class="mini-cart-icon"  href="/viewCartItems"> <span id="cartCount"></span>
                            <p class="pro-count "><img alt="GoEAsy" src="/assets/imgs/theme/icons/icon-cart.svg">
                                Cart</p>
                        </a>
                        <!-- <a class="mini-cart-icon" href="">
                         <img alt="GoEAsy" src="/assets/imgs/theme/icons/icon-cart.svg"> 
                        <p class="pro-count ">basket</p>
                         <span class="pro-count "></span> 
                    </a>-->
                        <!-- <div class="cart-dropdown-wrap cart-dropdown-hm2">
                            <ul id="cart-items-list">
                              Cart items will be dynamically generated here
                            </ul>
                            <div class="shopping-cart-footer">
                                <div class="shopping-cart-total">
                                    <h4>Total <span id="total-price">$0.00</span></h4>
                                </div>
                                <div class="shopping-cart-button">
                                    <a href="">View cart</a>
                                    <a href="/checkOut">Checkout</a>
                                </div>
                            </div>
                        </div> -->

                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
<section class="product-tabs section-padding position-relative wow fadeIn animated">

    <div class="container">
        <div class="tab-header" style="margin-top: 20px; margin-bottom: 20px;">

            <!-- <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="nav-tab-one" data-bs-toggle="tab" data-bs-target="#tab-one"
                        type="button" role="tab" aria-controls="tab-one" aria-selected="true">Vegetables</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="nav-tab-two" data-bs-toggle="tab" data-bs-target="#tab-two"
                        type="button" role="tab" aria-controls="tab-two" aria-selected="false">Fruits</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="nav-tab-three" data-bs-toggle="tab" data-bs-target="#tab-three"
                        type="button" role="tab" aria-controls="tab-three" aria-selected="false">Sprouts</button>
                </li>
            </ul> -->
            <!-- <a href="#" class="view-more d-none d-md-flex">View More<i
                    class="fi-rs-angle-double-small-right"></i></a> -->

        </div>
        <!--End nav-tabs-->

        <!-- <div class="tab-content wow fadeIn animated" id="myTabContent">
            <div class="tab-pane fade show active" id="tab-one" role="tabpanel" aria-labelledby="tab-one">
                <div class="row product-grid-4">

                  
                    <div class="col-12 mb-3">
                        <div class="btn-group" role="group" style="margin-top: 20px; margin-bottom: 20px;">
                            <% categories.forEach(category => { %>
                                <a href="" class="btn m-2" style="border-radius: 5px;"><%= category.name %></a><br>
                            <% }); %> -->
                            <!-- <a href="" class="btn m-2" style="border-radius: 5px;">Vegetables</a>
                            <a href="" class="btn m-2" style="border-radius: 5px;">Fruits</a>
                            <a href="" class="btn m-2" style="border-radius: 5px;">Sprouts</a>
                            <a href="/home?sort=low_to_high" class="btn m-2" style="border-radius: 5px;">Price: Low to High</a>
                            <a href="/home?sort=high_to_low" class="btn  m-2" style="border-radius: 5px;">Price: High to Low</a> -->
                        <!-- </div>
                    </div> -->



                    <script>
                        // to add the product to the cart
                        // function addToCart(productId) {

                        //     const quantitySelect = document.getElementById(`quantity-select-${productId}`)
                        //     const quantity = quantitySelect.value
                        //     //  ajax request to the server to add the product to the cart
                        //     fetch('/addToCart', {
                        //         method: 'POST',
                        //         headers: {
                        //             'Content-Type': 'application/json'
                        //         },
                        //         body: JSON.stringify({
                        //             product_id: productId,
                        //             quantity: 1
                        //         })
                        //     })
                        //         .then(response => {
                        //             if (response.ok) {
                        //                 const successMessage = response.headers.get('Success-Message');
                        //                 if (successMessage) {
                        //                     // Display success message
                        //                     console.log(successMessage);
                        //                 } else {
                        //                     // Handle other response data
                        //                     return response.json();
                        //                 }
                        //             } else {
                        //                 const errorMessage = response.headers.get('Error-Message');
                        //                 if (errorMessage) {
                        //                     // Display error message
                        //                     console.error(errorMessage);
                        //                 }
                        //                 throw new Error('Failed to add product to cart');
                        //             }
                        //         })
                        //         .then(data => {
                        //             console.log(data); //  from the server

                        //             //to upadate the cart count
                        //             const proCount = document.querySelector('.pro-count')
                        //             const currentCount = parseInt(proCount.textContent)
                        //             proCount.textContent = currentCount + 1

                        //         })
                        //         .catch(error => {
                        //             console.error('Error:', error);

                        //         });
                        // }

                        //to list the items in the basket
            //             document.addEventListener('DOMContentLoaded', function () {
            //                 fetch('/listCartItems')
            //                     .then(response => {
            //                         if (!response.ok) {
            //                             throw new Error('Failed to fetch cart items');
            //                         }
            //                         return response.json();
            //                     })
            //                     .then(data => {
            //                         const cartItemsList = document.getElementById('cart-items-list');
            //                         const totalPriceElement = document.getElementById('total-price');
            //                         cartItemsList.innerHTML = ''; // Clear previous items

            //                         // Iterate through each cart item and create HTML elements
            //                         data.cartItem.forEach(item => {
            //                             const listItem = document.createElement('li');
            //                             listItem.innerHTML = `
            //     <div class="shopping-cart-img">
            //         <a href=""><img alt="${item.product.name}" src="${item.product.image}"></a>
            //     </div>
            //     <div class="shopping-cart-title">
            //         <h4><a href="">${item.product.name}</a></h4>
            //         <h3><span>${item.quantity} Ã— </span> â‚¹${(item.price * item.quantity).toFixed(2)}</h3>
            //     </div>
            //     <div class="shopping-cart-delete">
            //         <a href='/removeCartItem/${item.product._id}'><i class="fi-rs-cross-small"></i></a>
            //     </div>
            // `;
            //                             cartItemsList.appendChild(listItem);
            //                         });

            //                         // Calculate and display the total price
            //                         const totalPrice = data.cartItem.reduce((total, item) => total + (item.price * item.quantity), 0);
            //                         totalPriceElement.textContent = ` â‚¹${totalPrice.toFixed(2)}`;
            //                     })
            //                     .catch(error => {
            //                         console.error('Error fetching cart items:', error);
            //                     });
            //             });


            //             //to delete the cart items
            //             document.addEventListener('DOMContentLoaded', function () {
            //                 const cartItemsList = document.getElementById('cart-items-list');
            //                 const totalPriceElement = document.getElementById('total-price');

            //                 // Attach event listener to the cart items list to handle delete clicks
            //                 cartItemsList.addEventListener('click', function (event) {
            //                     if (event.target.classList.contains('delete-item')) {
            //                         // Find the parent li element of the delete button
            //                         const listItem = event.target.closest('li');

            //                         // Find the product id from the listItem
            //                         const productId = listItem.dataset.product_id

            //                         // Remove the item from the UI
            //                         listItem.remove();

            //                         // Send a request to your server to remove the item from the cart
            //                         fetch(`/removeCartItem/${productId}`, {
            //                             method: 'DELETE',
            //                         })
            //                             .then(response => {
            //                                 if (!response.ok) {
            //                                     throw new Error('Failed to remove cart item');
            //                                 }
            //                                 // Update the total price after successful removal
            //                                 return response.json();
            //                             })
            //                             .then(data => {
            //                                 // Update the total price displayed
            //                                 totalPriceElement.textContent = ` â‚¹${data.totalPrice.toFixed(2)}`;
            //                             })
            //                             .catch(error => {
            //                                 console.error('Error removing cart item:', error);
            //                                 const errorMessage = document.getElementById('errorMessage');
            //                                 errorMessage.textContent = 'Failed to add product to cart: ' + error.message;
            //                             });
            //                     }
            //                 });


                        // });
                    </script>